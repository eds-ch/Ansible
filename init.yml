---
- hosts: database
  become: true
 
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present

    - name: Check if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "{{ postgresql_data_dir }}/pg_hba.conf"
      register: postgres_data

    - name: Empty data dir
      ansible.builtin.file:
        path: "{{ postgresql_data_dir }}"
        state: absent
      when: not postgres_data.stat.exists

    - name: Initialize PostgreSQL
      ansible.builtin.shell: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
      become: true
      become_user: postgres
      when: not postgres_data.stat.exists
      vars:
        ansible_ssh_pipelining: true

    - name: Start and enable service
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

- hosts: app
  become: true
  become_user: root

  
  tasks:

    - name: Add Docker GPG apt Key Ubuntu
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: (ansible_facts['distribution'] == "Ubuntu" )

    - name: Add Docker Repository Ubuntu
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: (ansible_facts['distribution'] == "Ubuntu" )

    - name: Add Docker Repository CentOS
      ansible.builtin.yum_repository:
        name: Docker
        description: Docker repo
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgcheck: no
        state: present
      when: (ansible_facts['distribution'] == "AlmaLinux" )


    - name: Install Docker
      package:
        pkg:
          - docker-ce
        state: latest
        update_cache: true

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: true
